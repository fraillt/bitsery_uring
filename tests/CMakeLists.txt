
cmake_minimum_required(VERSION 3.10)
project(bitsery_uring_tests CXX)

find_package(GTest 1.10 REQUIRED)

if (NOT TARGET Bitsery::bitsery_uring)
    message(FATAL_ERROR "Bitsery::bitsery_uring alias not set. Please generate CMake from bitsery_uring root directory.")
endif()

file(GLOB TestSourceFiles ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)

enable_testing()

foreach (TestFile ${TestSourceFiles})
    get_filename_component(TestName ${TestFile} NAME_WE)
    set(TestName bitsery_uring.test.${TestName})
    add_executable(${TestName} ${TestFile})
    target_link_libraries(${TestName} PRIVATE GTest::Main Bitsery::bitsery_uring Bitsery::bitsery)
    if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
        target_compile_options(${TestName} PRIVATE -Wextra -Wconversion -Wno-missing-braces -Wpedantic -Weffc++ -Werror)
    endif()
    if (CMAKE_CXX_COMPILER_ID MATCHES "Clang")
        target_compile_options(${TestName} PRIVATE -Wno-c++14-extensions)
    endif()
    gtest_discover_tests(${TestName})

    #    add_test(NAME ${TestName} COMMAND $<TARGET_FILE:${TestName}>)
endforeach()

#======================= setup development environment ====================

# get all header files for IDE  (in my case Clion) and create dummy project that consumes theses files
get_directory_property(ParentDir PARENT_DIRECTORY)
if (ParentDir)
    # only include when working from root project (Bitsery)
    file(GLOB_RECURSE HeadersForIDE ${ParentDir}/include/bitsery_uring/*.h)
    # create dummy target IDE
    file(WRITE ${CMAKE_BINARY_DIR}/dummy_for_ide.cpp "//generated by CMake to create dummy target with all includes for IDE.")
    add_library(bitsery_uring.dummy_for_ide ${CMAKE_BINARY_DIR}/dummy_for_ide.cpp)
    # add headers so IDE correctly show them
#    target_sources(bitsery_uring.dummy_for_ide PRIVATE ${HeadersForIDE} serialization_test_utils.h)
#    target_link_libraries(bitsery_uring.dummy_for_ide PRIVATE GTest::Main Bitsery::bitsery Bitsery::bitsery_uring)
endif()
